{"version":3,"sources":["infinite-scroll.min.js"],"names":["root","factory","define","amd","exports","module","InfiniteScroll","this","options","eventEmitter","autoLoad","currentPage","finished","itemSelector","item","nextSelector","next","requestConfig","context","dataType","updatePagination","$","waitForImages","listener","Listener","activeZone","callback","load","emit","bind","timeoutId","listening","onScroll","clearTimeout","setTimeout","resolve","validate","stop","prototype","ajax","then","data","$data","$items","find","$pagination","imagesReady","postLoad","items","page","that","start","pagination","length","url","attr","window","addEventListener","removeEventListener","innerHeight","pageYOffset","document","body","scrollHeight"],"mappings":"CAAE,SAASA,EAAMC,GACO,kBAAXC,SAAyBA,OAAOC,IACzCD,UAAWD,GACiB,gBAAZG,SAChBC,OAAOD,QAAUH,IAEjBD,EAAKM,eAAiBL,KAExBM,KAAM,WACR,YAeA,SAASD,GAAeE,GACtBC,cAAc,aAAc,aAAc,YAAaF,MAEvDA,KAAKG,SAAWF,EAAQE,YAAa,EAErCH,KAAKI,YAAc,EAEnBJ,KAAKK,UAAW,EAEhBL,KAAKM,aAAeL,EAAQM,KAC5BP,KAAKQ,aAAeP,EAAQQ,KAE5BT,KAAKU,eACHC,QAASX,KACTY,SAAU,QAGZZ,KAAKa,iBAAiBC,EAAEd,KAAKQ,eAE7BR,KAAKe,gBAAkBd,EAAQc,cAE/Bf,KAAKgB,SAAW,GAAIC,IAClBC,WAAYjB,EAAQiB,YAAc,IAClCC,SAAU,WACJnB,KAAKG,SACPH,KAAKoB,OAGLpB,KAAKqB,KAAK,eAEZC,KAAKtB,QA8FX,QAASiB,GAAShB,GAEhB,GAAIsB,GAAY,IAGhBvB,MAAKkB,WAAajB,EAAQiB,YAAc,IACxClB,KAAKmB,SAAWlB,EAAQkB,SACxBnB,KAAKwB,WAAY,EAOjBxB,KAAKyB,SAAW,WACVF,GAAWG,aAAaH,GAC5BA,EAAYI,WAAW3B,KAAK4B,QAAS,MACrCN,KAAKtB,MAMPA,KAAK4B,QAAU,WACT5B,KAAK6B,aACP7B,KAAK8B,OACL9B,KAAKmB,aAEPG,KAAKtB,MA0CT,MA/JAD,GAAegC,WAKbX,KAAO,WACL,MAAIpB,MAAKK,SAAT,QAEAL,KAAKqB,KAAK,cAEHP,EAAEkB,KAAKhC,KAAKU,eAChBuB,KAAK,SAASC,GACb,GAAIC,GAAQrB,EAAE,QAAUoB,EAAO,UAC3BE,EAASD,EAAME,KAAKrC,KAAKM,cACzBgC,EAAcH,EAAME,KAAKrC,KAAKQ,aAElC2B,GAAQ,KAERnC,KAAKa,iBAAiByB,GAElBtC,KAAKe,cACPqB,EAAOG,cACJN,KAAKjC,KAAKwC,SAASlB,KAAKtB,OAG3BA,KAAKwC,SAASJ,OAStBI,SAAW,SAASC,GAClB,GAAIP,IAAQO,MAAOA,EAAOC,KAAM1C,KAAKI,aACjCuC,EAAO3C,IAEXA,MAAKqB,KAAK,WAAYa,EAAM,WAC1BS,EAAKC,WAQTA,MAAQ,WACD5C,KAAKK,UACRL,KAAKgB,SAAS4B,SAQlBd,KAAO,WACL9B,KAAKgB,SAASc,QAOhBjB,iBAAmB,SAASgC,GAC1B7C,KAAKI,cAEDyC,EAAWC,OACb9C,KAAKU,cAAcqC,IAAMF,EAAWG,KAAK,QAGzChD,KAAKK,UAAW,IAkDtBY,EAASc,WAKPa,MAAQ,WACF5C,KAAKwB,YAELxB,KAAK6B,WACP7B,KAAKmB,YAGLnB,KAAKwB,WAAY,EACjByB,OAAOC,iBAAiB,SAAUlD,KAAKyB,aAQ3CK,KAAO,WACA9B,KAAKwB,YACVyB,OAAOE,oBAAoB,SAAUnD,KAAKyB,UAC1CzB,KAAKwB,WAAY,IAOnBK,SAAW,WACT,MAAOoB,QAAOG,YAAcH,OAAOI,aAAeC,SAASC,KAAKC,aAAexD,KAAKkB,aAKjFnB","file":"infinite-scroll.min.js","sourcesContent":[";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.InfiniteScroll = factory();\n  }\n}(this, function() {\n'use strict';\n\n\n/**\n * @name InfiniteScroll\n * @constructor\n *\n * @param {{}}      options\n * @param {boolean} [options.autoLoad=true]\n * @param {string}  options.item\n * @param {string}  options.next\n * @param {number}  [options.activeZone=200]\n * @param {boolean} [options.waitForImages=false]\n *\n */\nfunction InfiniteScroll(options) {\n  eventEmitter(['load:ready', 'load:start', 'load:end'], this);\n\n  this.autoLoad = options.autoLoad !== false;\n\n  this.currentPage = 0;\n\n  this.finished = false;\n\n  this.itemSelector = options.item;\n  this.nextSelector = options.next;\n\n  this.requestConfig = {\n    context: this,\n    dataType: 'html'\n  };\n\n  this.updatePagination($(this.nextSelector));\n\n  this.waitForImages = !!options.waitForImages;\n\n  this.listener = new Listener({\n    activeZone: options.activeZone || 200,\n    callback: function(){\n      if (this.autoLoad) {\n        this.load();\n      }\n      else {\n        this.emit('load:ready');\n      }\n    }.bind(this)\n  });\n}\n\n\nInfiniteScroll.prototype = {\n\n  /**\n   * Load the next available page.\n   */\n  load : function() {\n    if (this.finished) return;\n\n    this.emit('load:start');\n\n    return $.ajax(this.requestConfig)\n      .then(function(data){\n        var $data = $('<div>' + data + '</div>'),\n            $items = $data.find(this.itemSelector),\n            $pagination = $data.find(this.nextSelector);\n\n        $data = null;\n\n        this.updatePagination($pagination);\n\n        if (this.waitForImages) {\n          $items.imagesReady()\n            .then(this.postLoad.bind(this));\n        }\n        else {\n          this.postLoad($items);\n        }\n      });\n  },\n\n\n  /**\n   * @param {jQuery} items\n   */\n  postLoad : function(items) {\n    var data = {items: items, page: this.currentPage},\n        that = this;\n\n    this.emit('load:end', data, function(){\n      that.start();\n    });\n  },\n\n\n  /**\n   * Start infinite-scroll.\n   */\n  start : function() {\n    if (!this.finished) {\n      this.listener.start();\n    }\n  },\n\n\n  /**\n   * Stop infinite-scroll.\n   */\n  stop : function() {\n    this.listener.stop();\n  },\n\n\n  /**\n   * @param {jQuery} pagination\n   */\n  updatePagination : function(pagination) {\n    this.currentPage++;\n\n    if (pagination.length) {\n      this.requestConfig.url = pagination.attr('href');\n    }\n    else {\n      this.finished = true;\n    }\n  }\n\n};\n\n/**\n * @name Listener\n * @constructor\n *\n * @param {{}}       options\n * @param {number}   [options.activeZone=200]\n * @param {function} options.callback\n *\n * TODO: extend Listener with eventEmitter\n *\n */\nfunction Listener(options) {\n\n  var timeoutId = null;\n\n\n  this.activeZone = options.activeZone || 200;\n  this.callback = options.callback;\n  this.listening = false;\n\n\n  /**\n   * Scroll event handler/throttler.\n   * @type {function(this:Listener)}\n   */\n  this.onScroll = function() {\n    if (timeoutId) clearTimeout(timeoutId);\n    timeoutId = setTimeout(this.resolve, 100);\n  }.bind(this);\n\n\n  /**\n   * @type {function(this:Listener)}\n   */\n  this.resolve = function() {\n    if (this.validate()) {\n      this.stop();\n      this.callback();\n    }\n  }.bind(this);\n\n}\n\n\nListener.prototype = {\n\n  /**\n   * Start listening to scroll event.\n   */\n  start : function() {\n    if (this.listening) return;\n\n    if (this.validate()) {\n      this.callback();\n    }\n    else {\n      this.listening = true;\n      window.addEventListener('scroll', this.onScroll);\n    }\n  },\n\n\n  /**\n   * Stop listening to scroll event.\n   */\n  stop : function() {\n    if (!this.listening) return;\n    window.removeEventListener('scroll', this.onScroll);\n    this.listening = false;\n  },\n\n\n  /**\n   * @returns {boolean}\n   */\n  validate : function() {\n    return window.innerHeight + window.pageYOffset >= document.body.scrollHeight - this.activeZone;\n  }\n\n};\n\nreturn InfiniteScroll;\n}));\n"],"sourceRoot":"/source/"}